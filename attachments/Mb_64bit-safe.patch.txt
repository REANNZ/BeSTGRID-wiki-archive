diff -ur mrbayes-3.1.2.new/Makefile mrbayes-3.1.2/Makefile
--- mrbayes-3.1.2.new/Makefile	2006-08-08 16:26:36.000000000 +0200
+++ mrbayes-3.1.2/Makefile	2005-12-22 17:13:06.000000000 +0100
@@ -6,7 +6,6 @@
 # Set MPI=yes for the parallel version
 MPI ?= no
 
-_64BIT ?= no
 # Set DEBUG=yes for a debug version of mrbayes, otherwise set OPTFLAGS 
 # to the desired optimization level (e.g. -O2 -fomit-frame-pointer for
 # less aggressive optimization than the default -O3)
@@ -64,10 +63,6 @@
 	CFLAGS += $(OPTFLAGS)
 endif
 
-ifeq ($(strip $(_64BIT)), yes)
-	CFLAGS += -D_64BIT
-endif
-
 CFLAGS   +=   -Wall 
 
 LIBS     +=   -lm
diff -ur mrbayes-3.1.2.new/bayes.c mrbayes-3.1.2/bayes.c
--- mrbayes-3.1.2.new/bayes.c	2006-08-08 16:01:52.000000000 +0200
+++ mrbayes-3.1.2/bayes.c	2005-12-23 17:26:28.000000000 +0100
@@ -81,11 +81,11 @@
 int			defPairs;                    /* flag for whether pairs are read               */
 Doublet		doublet[16];                 /* holds information on states for doublets      */
 int			fileNameChanged;			 /* has file name been changed ?                  */
-safeLong	globalSeed;                  /* seed that is initialized at start up          */
-int			nBitsInALong;                /* number of bits in a safeLong                      */
+long int	globalSeed;                  /* seed that is initialized at start up          */
+int			nBitsInALong;                /* number of bits in a long                      */
 int			readWord;					 /* should we read word next ?                    */
-safeLong	runIDSeed;                   /* seed used only for determining run ID [stamp] */
-safeLong	swapSeed;                    /* seed used only for determining which to swap  */
+long int	runIDSeed;                   /* seed used only for determining run ID [stamp] */
+long int	swapSeed;                    /* seed used only for determining which to swap  */
 int         userLevel;                   /* user level                                    */
 
 #			if defined (MPI_ENABLED)
@@ -143,7 +143,7 @@
 #	endif
 	/*mtrace();*/
 	/* calculate the size of a long - used by bit manipulation functions */
-	nBitsInALong = sizeof(safeLong) * 8;
+	nBitsInALong = sizeof(long) * 8;
 	if (nBitsInALong > 32) /* Do not use more than 32 bits until we    */
 		nBitsInALong = 32; /* understand how 64-bit longs are handled. */
 
@@ -401,7 +401,7 @@
 	if (proc_id == 0)
 		{
 		curTime = time(NULL);
-		globalSeed  = (safeLong)curTime;
+		globalSeed  = (long int)curTime;
 		if (globalSeed < 0)
 			globalSeed = -globalSeed;
 		}
@@ -414,7 +414,7 @@
 	if (proc_id == 0)
 		{
 		curTime = time(NULL);
-		swapSeed  = (safeLong)curTime;
+		swapSeed  = (long int)curTime;
 		if (swapSeed < 0)
 			swapSeed = -swapSeed;
 		}
@@ -427,7 +427,7 @@
 	if (proc_id == 0)
 		{
 		curTime = time(NULL);
-		runIDSeed  = (safeLong)curTime;
+		runIDSeed  = (long int)curTime;
 		if (runIDSeed < 0)
 			runIDSeed = -runIDSeed;
 		}
@@ -439,17 +439,17 @@
 
 #	else
 	curTime = time(NULL);
-	globalSeed  = (safeLong)curTime;
+	globalSeed  = (long int)curTime;
 	if (globalSeed < 0)
 		globalSeed = -globalSeed;
 		
 	curTime = time(NULL);
-	swapSeed  = (safeLong)curTime;
+	swapSeed  = (long int)curTime;
 	if (swapSeed < 0)
 		swapSeed = -swapSeed;
 
 	curTime = time(NULL);
-	runIDSeed  = (safeLong)curTime;
+	runIDSeed  = (long int)curTime;
 	if (runIDSeed < 0)
 		runIDSeed = -globalSeed;
 		
@@ -473,7 +473,7 @@
 	readWord			 = NO;                       /* should we read a word next ?                  */
 	fileNameChanged		 = NO;                       /* has the file name been changed ?              */
 	echoMB                 = YES;                      /* flag used by Manual to control printing       */
-	longIntegerSize      = sizeof(safeLong);         /* size of an safeLong                       */
+	longIntegerSize      = sizeof(long int);         /* size of an long integer                       */
 
 #	if defined (MPI_ENABLED)
 	sprintf(manFileName, "commref_mb%sp.txt", VERSION_NUMBER);  /* name of command reference file      */
diff -ur mrbayes-3.1.2.new/command.c mrbayes-3.1.2/command.c
--- mrbayes-3.1.2.new/command.c	2006-08-08 16:03:50.000000000 +0200
+++ mrbayes-3.1.2/command.c	2005-12-23 17:53:30.000000000 +0100
@@ -142,7 +142,7 @@
 int      StateCode_AA (int n);
 int      StateCode_NUC4 (int n);
 int      StateCode_Std (int n);
-void     WhatVariableExp (unignedSafeLong exp, char *st);
+void     WhatVariableExp (unsigned long int exp, char *st);
 char     WhichAA (int x);
 MrBFlt   WhichCont (int x);
 char     WhichRes (int x);
@@ -161,7 +161,7 @@
 char			*constraintNames;      /* holds names of constraints                    */
 int				dataType;              /* type of data                                  */
 int				echoMB;				   /* flag used by Manual to prevent echoing        */
-unignedSafeLong expecting;           /* variable denoting expected token type         */
+unsigned long int expecting;           /* variable denoting expected token type         */
 int				foundNewLine;          /* whether a new line has been found             */
 int 			inComment;             /* flag for whether input stream is commented    */
 int				inferAncStates;		   /* should ancestral states be inferred (y/n)     */
@@ -7348,13 +7348,13 @@
 
 
 
-unignedSafeLong Expecting (int y)
+unsigned long int Expecting (int y)
 
 {
 
-	unignedSafeLong x;
+	unsigned long int x;
 	
-	x = (unignedSafeLong)pow(2.0, (MrBFlt)y);
+	x = (unsigned long int)pow(2.0, (MrBFlt)y);
 	
 	return (x);
 
@@ -12200,7 +12200,7 @@
 
 
 
-void WhatVariableExp (unignedSafeLong exp, char *st)
+void WhatVariableExp (unsigned long int exp, char *st)
 
 {
 
diff -ur mrbayes-3.1.2.new/command.h mrbayes-3.1.2/command.h
--- mrbayes-3.1.2.new/command.h	2006-08-08 16:03:50.000000000 +0200
+++ mrbayes-3.1.2/command.h	2005-03-09 04:01:30.000000000 +0100
@@ -1,7 +1,7 @@
 
 
 extern int      AddToString (char *s1, char *s2, int *x);
-extern unignedSafeLong Expecting (int y);
+extern unsigned long int Expecting (int y);
 extern int      CheckString (char *s1, char *s2, int *x);
 extern int      CheckStringValidity (char *s);
 extern int      DerootUserTree (TreeNode *p);
diff -ur mrbayes-3.1.2.new/globals.h mrbayes-3.1.2/globals.h
--- mrbayes-3.1.2.new/globals.h	2006-08-08 16:03:51.000000000 +0200
+++ mrbayes-3.1.2/globals.h	2005-12-22 22:34:40.000000000 +0100
@@ -17,11 +17,11 @@
 extern int				defTaxa;                                /* flag for whether number of taxa is known      */
 extern Doublet			doublet[16];                            /* holds information on states for doublets      */
 extern int				echoMB;							   	    /* flag used by Manual to prevent echoing        */
-extern unignedSafeLong expecting;								/* variable denoting expected token type         */
+extern long unsigned int expecting;								/* variable denoting expected token type         */
 extern int				fileNameChanged;					    /* has file name been changed?                   */
 extern int				foundNewLine;                           /* whether a new line has been found             */
 extern char				gapId;                                  /* gap character Id                              */
-extern safeLong			globalSeed;                             /* seed that is initialized at start up          */
+extern long int			globalSeed;                             /* seed that is initialized at start up          */
 extern char				*headerNames;                           /* string to hold headers in sump and plot       */
 extern int 				inComment;                              /* flag for whether input stream is commented    */
 extern int				inferAncStates;					   	    /* should ancestral states be inferred (y/n)     */
@@ -75,9 +75,9 @@
 extern ReassembleInfo	reassembleParams;		                /* holds parameters for reassemble command       */
 extern MrBFlt			relConstraintProbs[30];                 /* relative probs. of trees with constraint      */
 extern int				replaceLogFile;                         /* should logfile be replace/appended to         */
-extern safeLong			runIDSeed;                              /* seed used only for generating run ID [stamp]  */
+extern long int			runIDSeed;                              /* seed used only for generating run ID [stamp]  */
 extern char				spacer[10];                             /* holds blanks for printing indentations        */
-extern safeLong			swapSeed;                               /* seed used only for determining which to swap  */
+extern long int			swapSeed;                               /* seed used only for determining which to swap  */
 extern Sump				sumpParams;                             /* holds parameters for sump command             */
 extern Sumt				sumtParams;                             /* holds parameters for sumt command             */
 extern char				stamp[11];                   			/* holds a unique identifier for each analysis   */
@@ -88,7 +88,7 @@
 extern int  			theAmbigChar;                           /* int containing ambiguous character            */
 extern char				*transFrom;                             /* translation block information                 */
 extern char				*transTo;                               /* translation block information                 */
-extern int				longIntegerSize;                        /* size of an safeLong                       */
+extern int				longIntegerSize;                        /* size of an long integer                       */
 extern int				userBrlensDef;                          /* are the branch lengths on user tree defined   */
 extern int              userLevel;                              /* the level of the user                         */ 	
 extern Tree				*userTree;                              /* user tree                                     */
diff -ur mrbayes-3.1.2.new/mb.h mrbayes-3.1.2/mb.h
--- mrbayes-3.1.2.new/mb.h	2006-08-08 16:03:51.000000000 +0200
+++ mrbayes-3.1.2/mb.h	2005-12-23 17:26:28.000000000 +0100
@@ -6,22 +6,6 @@
 #endif
 #endif
 
-/* found out that mrbayes crashes on 64 bit platform
-   especially in sumt function. If every long is substituted with
-   an int, it works. I'm going to define a safeLong and a unsigned
-   safeLong for 64 bit platforms...
-   Davide Cittaro - daweonline(at)gmail.com
-*/
-
-#ifdef _64BIT
-typedef int safeLong;
-typedef unsigned int unignedSafeLong;
-#else
-typedef long safeLong;
-typedef long unsigned int unignedSafeLong;
-#endif
-
-
 /* definition of UNIX_VERSION, WIN_VERSION or MAC_VERSION is now set in the
    Makefile file; for compilers not using a project file or Makefile, use the #defines above to select version */
 
@@ -370,8 +354,8 @@
 	struct node		*left, *right, *anc;
 	int				memoryIndex, index, upDateCl, upDateTi, marked, x, y,
 					scalerNode, isLocked, lockID, uL, dL, mL, isDated;
-	safeLong		scalersSet[MAX_NUM_DIV_LONGS], clSpace[MAX_NUM_DIV_LONGS], tiSpace[MAX_NUM_DIV_LONGS];
-	safeLong 		*partition;
+	long int		scalersSet[MAX_NUM_DIV_LONGS], clSpace[MAX_NUM_DIV_LONGS], tiSpace[MAX_NUM_DIV_LONGS];
+	long int 		*partition;
 	char			label[100];
 	MrBFlt			length, nodeDepth, d, age;
 	Calibration		*calibration;
@@ -405,7 +389,7 @@
 	int				x, y, mark, index, memoryIndex, isLocked, lockID, isDated;
 	MrBFlt			length, support, f, age;
 	char			label[100];
-	safeLong		*partition;
+	long int		*partition;
 	Calibration		*calibration;
 	}
 	PolyNode;
@@ -561,7 +545,7 @@
 #define	OMEGA_10FFF						108
 
 /* typedef for a MoveFxn */
-typedef int (MoveFxn)(Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+typedef int (MoveFxn)(Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
 
 /* struct holding info on each move type that the program handles */
 typedef struct
@@ -788,7 +772,7 @@
 	int			numStartPerts;         /* number of perturbations to starting tree      */
 	char		chainStartTree[100];   /* starting tree for chain (random/user)         */
 	int			saveBrlens;            /* should branch lengths be saved                */
-	safeLong	chainSeed;             /* random seed for chain                         */
+	long int	chainSeed;             /* random seed for chain                         */
 	MrBFlt		weightScheme[3];       /* percent chars to increase/decrease in weight  */
 	int			calcPbf;               /* should we calculate the pseudo Bayes factor   */
 	int			pbfInitBurnin;         /* initial burnin when calculating pseudo BF     */
@@ -963,12 +947,12 @@
 
 typedef struct doublet
 	{
-	safeLong	first, second;
+	long int	first, second;
 	} Doublet;
 
 typedef struct matrix
 	{
-	safeLong *origin;
+	long *origin;
 	int rowSize;
 	int nRows;
 	int column;
diff -ur mrbayes-3.1.2.new/mbmath.c mrbayes-3.1.2/mbmath.c
--- mrbayes-3.1.2.new/mbmath.c	2006-08-08 16:01:53.000000000 +0200
+++ mrbayes-3.1.2/mbmath.c	2005-12-23 17:26:28.000000000 +0100
@@ -90,7 +90,7 @@
 void    Exchange (int j, int k, int l, int m, int n, MrBFlt **a, MrBFlt *scale);
 MrBFlt  Factorial (int x);
 void    ForwardSubstitutionRow (int dim, MrBFlt **L, MrBFlt *b);
-MrBFlt  GammaRandomVariable (MrBFlt a, MrBFlt b, safeLong *seed);
+MrBFlt  GammaRandomVariable (MrBFlt a, MrBFlt b, long int *seed);
 void    GaussianElimination (int dim, MrBFlt **a, MrBFlt **bMat, MrBFlt **xMat);
 int     Hqr2 (int dim, int low, int high, MrBFlt **h, MrBFlt *wr, MrBFlt *wi, MrBFlt **z);
 MrBFlt  IncompleteBetaFunction (MrBFlt alpha, MrBFlt beta, MrBFlt x);
@@ -108,9 +108,9 @@
 void    PrintSquareDoubleMatrix (int dim, MrBFlt **matrix);
 void    PrintSquareIntegerMatrix (int dim, int **matrix);
 complex ProductOfRealAndComplex (MrBFlt a, complex b);
-MrBFlt  RndGamma (MrBFlt s, safeLong *seed);
-MrBFlt  RndGamma1 (MrBFlt s, safeLong *seed);
-MrBFlt  RndGamma2 (MrBFlt s, safeLong *seed);
+MrBFlt  RndGamma (MrBFlt s, long int *seed);
+MrBFlt  RndGamma1 (MrBFlt s, long int *seed);
+MrBFlt  RndGamma2 (MrBFlt s, long int *seed);
 int     SetQvalue (MrBFlt tol);
 void    SetToIdentity (int dim, MrBFlt **matrix);
 MrBFlt  Tha (MrBFlt h1, MrBFlt h2, MrBFlt a1, MrBFlt a2);
@@ -1910,7 +1910,7 @@
 |   in the vector z.
 |      
 ---------------------------------------------------------------------------------*/
-void DirichletRandomVariable (MrBFlt *alp, MrBFlt *z, int n, safeLong *seed)
+void DirichletRandomVariable (MrBFlt *alp, MrBFlt *z, int n, long int *seed)
 
 {
 
@@ -2578,7 +2578,7 @@
 |   a and b. The mean is E(X) = a / b and the variance is Var(X) = a / b^2.
 |      
 ---------------------------------------------------------------------------------*/
-MrBFlt GammaRandomVariable (MrBFlt a, MrBFlt b, safeLong *seed)
+MrBFlt GammaRandomVariable (MrBFlt a, MrBFlt b, long int *seed)
 
 {
 
@@ -4746,11 +4746,11 @@
 |      ones are hard to find.  Communications of the ACM, 31(10):1192-1201.
 |
 ---------------------------------------------------------------------------------*/
-MrBFlt RandomNumber (safeLong *seed)
+MrBFlt RandomNumber (long int *seed)
 
 {
 
-	safeLong	lo, hi, test;
+	long int	lo, hi, test;
 	
 	hi = (*seed) / 127773;
 	lo = (*seed) % 127773;
@@ -4772,7 +4772,7 @@
 |   RndGamma
 |
 ---------------------------------------------------------------------------------*/
-MrBFlt RndGamma (MrBFlt s, safeLong *seed)
+MrBFlt RndGamma (MrBFlt s, long int *seed)
 
 {
 
@@ -4800,7 +4800,7 @@
 |   RndGamma1
 |
 ---------------------------------------------------------------------------------*/
-MrBFlt RndGamma1 (MrBFlt s, safeLong *seed)
+MrBFlt RndGamma1 (MrBFlt s, long int *seed)
 
 {
 
@@ -4844,7 +4844,7 @@
 |   RndGamma2
 |
 ---------------------------------------------------------------------------------*/
-MrBFlt RndGamma2 (MrBFlt s, safeLong *seed)
+MrBFlt RndGamma2 (MrBFlt s, long int *seed)
 
 {
 
diff -ur mrbayes-3.1.2.new/mbmath.h mrbayes-3.1.2/mbmath.h
--- mrbayes-3.1.2.new/mbmath.h	2006-08-08 16:01:53.000000000 +0200
+++ mrbayes-3.1.2/mbmath.h	2005-03-09 04:01:30.000000000 +0100
@@ -15,7 +15,7 @@
 void    CalcCijk (int dim, MrBFlt *c_ijk, MrBFlt **u, MrBFlt **v);
 void    CopyComplexMatrices (int dim, complex **from, complex **to);
 void    CopyDoubleMatrices (int dim, MrBFlt **from, MrBFlt **to);
-void    DirichletRandomVariable (MrBFlt *alp, MrBFlt *z, int n, safeLong *seed);
+void    DirichletRandomVariable (MrBFlt *alp, MrBFlt *z, int n, long int *seed);
 int     DiscreteGamma (MrBFlt *rK, MrBFlt alfa, MrBFlt beta, int K, int median);
 void    FreeSquareComplexMatrix (complex **m);
 void    FreeSquareDoubleMatrix (MrBFlt **m);
@@ -25,4 +25,4 @@
 void    MultiplyMatrices (int dim, MrBFlt **a, MrBFlt **b, MrBFlt **result);
 int     MultiplyMatrixNTimes (int dim, MrBFlt **Mat, int power, MrBFlt **Result);
 MrBFlt  QuantileGamma (MrBFlt x, MrBFlt alfa, MrBFlt beta);
-MrBFlt  RandomNumber (safeLong *seed);
+MrBFlt  RandomNumber (long int *seed);
diff -ur mrbayes-3.1.2.new/mcmc.c mrbayes-3.1.2/mcmc.c
--- mrbayes-3.1.2.new/mcmc.c	2006-08-08 16:01:53.000000000 +0200
+++ mrbayes-3.1.2/mcmc.c	2005-12-23 17:26:28.000000000 +0100
@@ -139,21 +139,21 @@
 	struct pfnode	*left;
 	struct pfnode	*right;
 	int				*count;
-	safeLong			*partition;
+	long			*partition;
 	} PFNODE;
 
 /* local prototypes */
 int     AddDummyChars (void);
 int     AddTreeSamples (int from, int to);
-PFNODE *AddPartition (PFNODE *r, safeLong *p, int runId);
+PFNODE *AddPartition (PFNODE *r, long *p, int runId);
 int     AddToPrintString (char *tempStr);
 int     AddTreeToPartitionCounters (Tree *tree, int treeId, int runId);
 Tree   *AllocateTree (int numTaxa, int isTreeRooted);
-int     AttemptSwap (int swapA, int swapB, safeLong *seed);
-int	    Bit (int n, safeLong *p);
+int     AttemptSwap (int swapA, int swapB, long int *seed);
+int	    Bit (int n, long *p);
 int     BuildConstraintTree (Tree *t, PolyTree *pt);
 void    BuildExhaustiveSearchTree (Tree *t, int chain, int nTaxInTree, TreeInfo *tInfo);
-int     BuildStartTree (Tree *t, safeLong *seed);
+int     BuildStartTree (Tree *t, long int *seed);
 int     CalcLike_Adgamma (int d, Param *param, int chain, MrBFlt *lnL);
 void    CalcPartFreqStats (PFNODE *p, STATS *stat);
 void    CalculateTopConvDiagn (int numSamples);
@@ -214,12 +214,12 @@
 #       endif
 int     ExhaustiveParsimonySearch (Tree *t, int chain, TreeInfo *tInfo);
 int     ExtendChainQuery ();
-int		FillNormalParams (safeLong *seed);
+int		FillNormalParams (long int *seed);
 int     FillNumSitesOfPat (void);
 int     FillRelPartsString (Param *p, char relPartString[100]);
-int		FillTreeParams (safeLong *seed);
+int		FillTreeParams (long int *seed);
 int     Flip01 (int x);
-void    FlipOneBit (int n, safeLong *p);
+void    FlipOneBit (int n, long *p);
 void    FreeChainMemory (void);
 void	FreeTree (Tree *t);
 void    GetChainIds (void);
@@ -237,7 +237,7 @@
 void    GetPossibleAAs (int aaCode, int aa[]);
 void    GetPossibleNucs (int nucCode, int nuc[]);
 void    GetPossibleRestrictionSites (int resSiteCode, int *sites);
-int     GetRandomEmbeddedSubtree (Tree *t, int nTerminals, safeLong *seed, int *nEmbeddedTrees);
+int     GetRandomEmbeddedSubtree (Tree *t, int nTerminals, long *seed, int *nEmbeddedTrees);
 MrBFlt  GetRate (int division, int chain);
 void    GetSprParsimonyLengths (int chain, int nNodes1, int nNodes2, TreeNode **subTree1DP, TreeNode **subTree2DP, TreeNode *root2, MrBFlt *pLengths);
 void    GetStamp (void);
@@ -253,13 +253,13 @@
 int     InitSprParsSets (void);
 int     InitTermCondLikes (void);
 void	InitTreeNode (TreeNode *p);
-int     IsBitSet (int i, safeLong *bits);
+int     IsBitSet (int i, long *bits);
 int     IsClockSatisfied (Tree *t, MrBFlt tol);
 int		IsCalibratedClockSatisfied (Tree *t, MrBFlt tol);
 int		IsPFNodeEmpty (PFNODE *p);
 void    JukesCantor (MrBFlt *tiP, MrBFlt length);
 PFNODE *LargestNonemptyPFNode (PFNODE *p, int *i, int j);
-safeLong    LastBlock (FILE *fp, char *lineBuf, int longestLine);
+long    LastBlock (FILE *fp, char *lineBuf, int longestLine);
 int     Likelihood_Adgamma (TreeNode *p, int division, int chain, MrBFlt *lnL, int whichSitePats);
 int	    Likelihood_Gen (TreeNode *p, int division, int chain, MrBFlt *lnL, int whichSitePats);
 int	    Likelihood_NUC4 (TreeNode *p, int division, int chain, MrBFlt *lnL, int whichSitePats);
@@ -279,62 +279,62 @@
 void    MarkClsBelow (TreeNode *p);
 MrBFlt  MaximumValue (MrBFlt x, MrBFlt y);
 MrBFlt  MinimumValue (MrBFlt x, MrBFlt y);
-int     Move_Aamodel (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_Adgamma (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_Beta (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_Beta_M (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_BiasedSpr (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_BrLen (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_Extinction (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_Extinction_M (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_ExtSPR1 (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_ExtSPR2 (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_ExtSPRClock (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_ExtSS (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_ExtTBR (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_ExtTBR1 (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_ExtTBR2 (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_ExtTBR3 (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_ExtTBR4 (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_GammaShape_M (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_Growth (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_Local (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_LocalClock (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_NNI (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int		Move_NNI_Hetero (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int		Move_NodeSlider (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int		Move_NodeSliderClock (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_Omega (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_Omega_M (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_OmegaBeta_M (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_OmegaCat (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_OmegaGamma_M (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_OmegaNeu (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_OmegaPos (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_OmegaPur (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_ParsEraser1 (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_Pinvar (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_RanSPR1 (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_RanSPR2 (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_RanSPR3 (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_RanSPR4 (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_RateMult_Dir (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_Revmat_Dir (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_Speciation (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_Speciation_M (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_SPRClock (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_Statefreqs (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int		Move_StatefreqsSymDirMultistate (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_SwitchRate (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_SwitchRate_M (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_Theta (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_Tratio_Dir (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_TreeHeight (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
-int     Move_UnrootedSlider (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_Aamodel (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_Adgamma (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_Beta (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_Beta_M (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_BiasedSpr (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_BrLen (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_Extinction (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_Extinction_M (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_ExtSPR1 (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_ExtSPR2 (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_ExtSPRClock (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_ExtSS (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_ExtTBR (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_ExtTBR1 (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_ExtTBR2 (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_ExtTBR3 (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_ExtTBR4 (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_GammaShape_M (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_Growth (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_Local (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_LocalClock (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_NNI (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int		Move_NNI_Hetero (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int		Move_NodeSlider (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int		Move_NodeSliderClock (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_Omega (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_Omega_M (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_OmegaBeta_M (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_OmegaCat (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_OmegaGamma_M (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_OmegaNeu (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_OmegaPos (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_OmegaPur (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_ParsEraser1 (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_Pinvar (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_RanSPR1 (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_RanSPR2 (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_RanSPR3 (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_RanSPR4 (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_RateMult_Dir (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_Revmat_Dir (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_Speciation (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_Speciation_M (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_SPRClock (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_Statefreqs (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int		Move_StatefreqsSymDirMultistate (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_SwitchRate (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_SwitchRate_M (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_Theta (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_Tratio_Dir (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_TreeHeight (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
+int     Move_UnrootedSlider (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp);
 void    NodeToNodeDistances (Tree *t, TreeNode *fromNode);
 int     NumNonExcludedChar (void);
 int     NumNonExcludedTaxa (void);
-int     PickProposal (safeLong *seed);
+int     PickProposal (long int *seed);
 int     PosSelProbs (TreeNode *p, int division, int chain);
 int		PreparePrintFiles (void);
 int     PrintAncStates_Bin (TreeNode *p, int division, int chain);
@@ -361,19 +361,19 @@
 int     PrintTree (int curGen, Tree *tree);
 int     ProcessStdChars (void);
 int		PruneTree (Tree *t);
-int		RandResolve (Tree *destination, PolyTree *t, safeLong *seed);
+int		RandResolve (Tree *destination, PolyTree *t, long *seed);
 #       if defined (MPI_ENABLED)
 int     ReassembleMoveInfo (void);
 int     ReassembleSwapInfo (void);
 #       endif
 int		RecreateTree (Tree *t, char *s);
-int     RemovePartition (PFNODE *r, safeLong *p, int runId);
+int     RemovePartition (PFNODE *r, long *p, int runId);
 int     RemoveTreeFromPartitionCounters (Tree *tree, int treeId, int runId);
 int     RemoveTreeSamples (int from, int to);
 int     ReopenMBPrintFiles (void);
 int     RequestAbortRun(void);
 int     ResetScalers (void);
-int     RunChain (safeLong *seed);
+int     RunChain (long int *seed);
 int     SaveSprintf(char **target, int *targetLen, char *fmt, ...);
 int     SetAARates (void);
 int     SetChainParams (void);
@@ -454,9 +454,9 @@
 int				*compColPos;		         /* column position in compressed matrix		 */
 int				*termState = NULL;			         /* index to terminal state ti:s                 */
 int				*isPartAmbig = NULL;		         /* does terminal taxon have partial ambiguity	 */
-safeLong		*compMatrix;		         /* compressed character matrix					 */
-safeLong		*parsMatrix = NULL;		         /* parsimony (bitset) matrix for terminals  	 */
-safeLong		*parsSets = NULL;					 /* parsimony (bitset) matrix for int nodes 	 */
+long int		*compMatrix;		         /* compressed character matrix					 */
+long int		*parsMatrix = NULL;		         /* parsimony (bitset) matrix for terminals  	 */
+long int		*parsSets = NULL;					 /* parsimony (bitset) matrix for int nodes 	 */
 CLFlt			*numSitesOfPat;		         /* no. sites of each pattern					 */
 CLFlt			*termCondLikes = NULL;		         /* cond likes for terminals                     */
 CLFlt			*chainCondLikes;	         /* cond likes for chains						 */
@@ -473,16 +473,16 @@
 int				*nAccepted;			         /* counter of accepted moves					 */
 CLFlt			**chainCLPtrSpace;           /* space holding pointers to cond likes         */
 CLFlt			***condLikePtr;		         /* pointers to cond likes for chain and node	 */
-safeLong			**parsPtrSpace = NULL;				 /* space holding pointers to parsimony sets     */
-safeLong			***parsPtr = NULL;					 /* pointers to pars state sets for chain & node */
+long			**parsPtrSpace = NULL;				 /* space holding pointers to parsimony sets     */
+long			***parsPtr = NULL;					 /* pointers to pars state sets for chain & node */
 CLFlt			*parsNodeLengthSpace = NULL;		 /* space for parsimony node lengths			 */
 CLFlt			**parsNodeLen = NULL;				 /* pointers to pars node lengths for chains     */
 char			*printString;                /* string for printing to a file                */
 size_t			printStringSize;             /* length of printString                        */
-safeLong		*sprParsMatrix;		         /* SPR parsimony (bitset) matrix for terminals  */
-safeLong		*sprParsSets;                /* SPR parsimony (bitset) matrix for all nodes  */
-safeLong			**sprParsPtrSpace;           /* space holding pointers to SPR parsimony sets */
-safeLong			***sprParsPtr;				 /* ptrs to SPR pars state sets for chain & node */
+long int		*sprParsMatrix;		         /* SPR parsimony (bitset) matrix for terminals  */
+long int		*sprParsSets;                /* SPR parsimony (bitset) matrix for all nodes  */
+long			**sprParsPtrSpace;           /* space holding pointers to SPR parsimony sets */
+long			***sprParsPtr;				 /* ptrs to SPR pars state sets for chain & node */
 int				sprParsMatrixRowSize;	     /* row size of SPR parsimony matrix             */
 CLFlt			*treeScalerSpace;            /* space holding tree scalers					 */
 CLFlt			**treeScaler;		         /* pointers to tree scalers for each chain		 */
@@ -535,7 +535,7 @@
 /*MrBFlt*/int			abortMove;					 /* flag determining whether to abort move       */
 PFNODE			**partFreqTreeRoot;			 /* root of tree(s) holding partition freqs      */
 int				nLongsNeeded;				 /* number of longs needed for partitions        */
-safeLong			**partition;                 /* matrix holding partitions                    */
+long			**partition;                 /* matrix holding partitions                    */
 MrBFlt          *maxLnL0 = NULL;                    /* maximum likelihood                           */
 FILE			*fpMcmc = NULL;              /* pointer to .mcmc file                        */
 FILE			**fpParm = NULL;             /* pointer to .p file(s)                        */
@@ -561,7 +561,7 @@
 	int			i, j, k, d, numIncompatible, numDeleted, numStdChars, oldRowSize,
 				newRowSize, numDummyChars, newColumn, newChar, oldColumn, oldChar, 
 				isCompat, *tempChar, numIncompatibleChars;
-	safeLong		*tempMatrix;
+	long		*tempMatrix;
 	CLFlt		*tempSitesOfPat;
 	ModelInfo	*m;
 	ModelParams	*mp;
@@ -626,7 +626,7 @@
 	numCompressedChars += numDummyChars;
 
 	/* allocate space for new data */
-	tempMatrix = (safeLong *) calloc (numLocalTaxa * newRowSize, sizeof(safeLong));
+	tempMatrix = (long *) calloc (numLocalTaxa * newRowSize, sizeof(long));
 	tempSitesOfPat = (CLFlt *) calloc (numCompressedChars, sizeof(CLFlt));
 	tempChar = (int *) calloc (compMatrixRowSize, sizeof(int));
 	if (!tempMatrix || !tempSitesOfPat || !tempChar)
@@ -838,7 +838,7 @@
 
 
 /* AddPartition: Add a partition to the tree keeping track of partition frequencies */
-PFNODE *AddPartition (PFNODE *r, safeLong *p, int runId)
+PFNODE *AddPartition (PFNODE *r, long *p, int runId)
 {
 	int		i, comp;
 	
@@ -935,7 +935,7 @@
 int AddTreeSamples (int from, int to)
 {
 	int	i, j, k, longestLine;
-	safeLong	lastBlock;
+	long	lastBlock;
 	char	*word, *s, *lineBuf;
 	FILE	*fp;
 	Tree	*t;
@@ -1115,7 +1115,7 @@
 
 
 
-int AttemptSwap (int swapA, int swapB, safeLong *seed)
+int AttemptSwap (int swapA, int swapB, long int *seed)
 
 {
 
@@ -1583,15 +1583,15 @@
 
 /*----------------------------------------------------------------
 |
-|	Bit: return 1 if bit n is set in safeLong *p
+|	Bit: return 1 if bit n is set in long *p
 |		else return 0
 |
 -----------------------------------------------------------------*/
-int Bit (int n, safeLong *p)
+int Bit (int n, long *p)
 
 {
 
-	safeLong		x;
+	long		x;
 
 	p += n / nBitsInALong;
 	x = 1 << (n % nBitsInALong);
@@ -1617,11 +1617,11 @@
 {
 
 	int				i, j, k, k1, nLongsNeeded, nextNode, nextActiveConstraint;
-	safeLong		*constraintPartition, *mask;
+	long int		*constraintPartition, *mask;
 	PolyNode		*pp, *qq, *rr, *ss, *tt;
 	   	
 	nLongsNeeded = (numLocalTaxa / nBitsInALong) + 1;
-	constraintPartition = (safeLong *) calloc (2*nLongsNeeded, sizeof(safeLong));
+	constraintPartition = (long int *) calloc (2*nLongsNeeded, sizeof(long int));
 	if (!constraintPartition)
 		{
 		MrBayesPrint ("%s   Problems allocating constraintPartition in BuildConstraintTree", spacer);
@@ -1898,7 +1898,7 @@
 |	BuildStartTree: Build one starting tree
 |
 ----------------------------------------------------------------*/
-int    BuildStartTree (Tree *t, safeLong *seed)
+int    BuildStartTree (Tree *t, long int *seed)
 
 {
 
@@ -1909,7 +1909,7 @@
 	PolyTree		constraintTree;
 	Tree			*tempTree;
 	char			tempName[100];
-	safeLong		*bitsets;
+	long int		*bitsets;
 	   
 	/* set pointers allocated locally to NULL for correct exit on error */
 	tempNums = NULL;
@@ -1955,7 +1955,7 @@
 		/* make random tree consistent with constraints */
 		/* first allocate space for partition specifiers and polytomous tree */
 		nLongsNeeded = (numLocalTaxa / nBitsInALong) + 1;
-		bitsets = (safeLong *) calloc (2*numLocalTaxa*nLongsNeeded, sizeof(safeLong));
+		bitsets = (long int *) calloc (2*numLocalTaxa*nLongsNeeded, sizeof(long int));
 		if (bitsets == NULL)
 			{
 			MrBayesPrint ("%s   Problem allocating space for bitsets in BuildStartTree", spacer);
@@ -2595,7 +2595,7 @@
 
 {
 	int				c, i, j, nRates, posit;
-	safeLong		inHMM;
+	long int		inHMM;
 	MrBFlt			logScaler, max, prob, *F,
 					*oldF, *tempF, fSpace[2][MAX_GAMMA_CATS];
 	MrBFlt			*rP;
@@ -3054,15 +3054,15 @@
 {
 
 	int				a, b, i, j, k, nLongsNeeded;
-	safeLong		*constraintPartition, *mask, *bitsets;
+	long int		*constraintPartition, *mask, *bitsets;
 	TreeNode		*p=NULL;
 	   	
 	/* allocate space */
 	nLongsNeeded = (numLocalTaxa / nBitsInALong) + 1;
 
-	bitsets = (safeLong *) calloc ((t->nNodes + 1)*nLongsNeeded + /*1*/
+	bitsets = (long int *) calloc ((t->nNodes + 1)*nLongsNeeded + /*1*/
                                        1+numLocalTaxa/nBitsInALong+1, 
-                                       sizeof(safeLong));
+                                       sizeof(long int));
 
 	if (!bitsets)
 		{
@@ -3494,12 +3494,12 @@
 {
 
 	int				a, b, i, j, k, nLongsNeeded, foundIt, nextActiveConstraint;
-	safeLong		*constraintPartition, *mask, *bitsets;
+	long int		*constraintPartition, *mask, *bitsets;
 	TreeNode		*p;
 	   	
 	/* allocate space */
 	nLongsNeeded = (numLocalTaxa / nBitsInALong) + 1;
-	bitsets = (safeLong *) calloc (2*nLongsNeeded*numLocalTaxa + 2, sizeof(safeLong));
+	bitsets = (long int *) calloc (2*nLongsNeeded*numLocalTaxa + 2, sizeof(long int));
 	if (!bitsets)
 		{
 		MrBayesPrint ("%s   Problems allocating bitsets in CheckSetConstraints", spacer);
@@ -3730,7 +3730,7 @@
 
 	int				a, c, d, i, j, k, t, col[3], isSame, newRow, newColumn,
 					*isTaken, *tempSitesOfPat, *tempChar;
-	safeLong			*tempMatrix;
+	long			*tempMatrix;
 	ModelInfo		*m;
 	ModelParams		*mp;
 
@@ -3780,7 +3780,7 @@
 	/* allocate space for temporary matrix, tempSitesOfPat,             */
 	/* vector keeping track of whether a character has been compressed, */
 	/* and vector indexing first original char for each compressed char */
-	tempMatrix = (safeLong *) calloc (numLocalTaxa * numLocalChar, sizeof(safeLong));
+	tempMatrix = (long *) calloc (numLocalTaxa * numLocalChar, sizeof(long));
 	tempSitesOfPat = (int *) calloc (numLocalChar, sizeof(int));
 	isTaken = (int *) calloc (numChar, sizeof(int));
 	tempChar = (int *) calloc (numLocalChar, sizeof(int));
@@ -3967,10 +3967,10 @@
 		MrBayesPrint ("%s   compMatrix not free in CompressData\n", spacer);
 		goto errorExit;
 		}
-	compMatrix = (safeLong *) calloc (compMatrixRowSize * numLocalTaxa, sizeof(safeLong));
+	compMatrix = (long *) calloc (compMatrixRowSize * numLocalTaxa, sizeof(long));
 	if (!compMatrix)
 		{
-		MrBayesPrint ("%s   Problem allocating compMatrix (%d)\n", spacer, compMatrixRowSize * numLocalTaxa * sizeof(safeLong));
+		MrBayesPrint ("%s   Problem allocating compMatrix (%d)\n", spacer, compMatrixRowSize * numLocalTaxa * sizeof(long));
 		goto errorExit;
 		}
 	memAllocs[ALLOC_COMPMATRIX] = YES;
@@ -6913,7 +6913,7 @@
 
 	int				i, j, k, d, nParsStatesForCont, nuc1, nuc2, nuc3, newColumn,
 					codingNucCode, allNucCode, allAmbig;
-	safeLong			x, x1, x2, x3, *longPtr;
+	long			x, x1, x2, x3, *longPtr;
 	ModelInfo		*m;
 	ModelParams		*mp;
 
@@ -6932,7 +6932,7 @@
 		mp = &modelParams[d];
 		m->parsMatrixStart = parsMatrixRowSize;
 
-		/* find how many parsimony ints (safeLong) are needed for each model site */
+		/* find how many parsimony ints (long) are needed for each model site */
 		if (mp->dataType == CONTINUOUS)
 			{
 			/* scale continuous characters down to an ordered parsimony character */
@@ -6953,7 +6953,7 @@
 		MrBayesPrint ("%s   parsMatrix not free in CreateParsMatrix\n", spacer);
 		return (ERROR);
 		}
-	parsMatrix = (safeLong *) calloc (parsMatrixRowSize * numLocalTaxa, sizeof(safeLong));
+	parsMatrix = (long *) calloc (parsMatrixRowSize * numLocalTaxa, sizeof(long));
 	if (!parsMatrix)
 		{
 		MrBayesPrint ("%s   Problem allocating parsMatrix\n", spacer);
@@ -7227,7 +7227,7 @@
 
 {
 
-	safeLong		seed, numGlobalChains;
+	long int		seed, numGlobalChains;
 	int			rc;
 
 #					if defined (MPI_ENABLED)
@@ -8662,7 +8662,7 @@
 |	FillNormalParams: Allocate and fill in non-tree parameters
 |
 -------------------------------------------------------------------------*/
-int FillNormalParams (safeLong *seed)
+int FillNormalParams (long int *seed)
 
 {
 
@@ -9559,7 +9559,7 @@
 |	FillTreeParams: Fill in trees and branch lengths
 |
 ------------------------------------------------------------------*/
-int FillTreeParams (safeLong *seed)
+int FillTreeParams (long int *seed)
 
 {
 
@@ -9894,14 +9894,14 @@
 
 /*-----------------------------------------------------------------
 |
-|	FlipOneBit: flip bit n in safeLong *p
+|	FlipOneBit: flip bit n in long *p
 |
 ------------------------------------------------------------------*/
-void FlipOneBit (int n, safeLong *p)
+void FlipOneBit (int n, long *p)
 
 {
 
-	safeLong		x;
+	long		x;
 
 	p += n/nBitsInALong;
 	x = 1 << (n % nBitsInALong);
@@ -10562,7 +10562,7 @@
 {
 	
 	int				c, i, n, division;
-	safeLong			*pL, *pR, *pP, *pA, x;
+	long			*pL, *pR, *pP, *pA, x;
 	CLFlt			*nSitesOfPat;
 	TreeNode        *p;
 	ModelInfo		*m;
@@ -10635,7 +10635,7 @@
 {
 	
 	int				c, i, n, division;
-	safeLong			*pL, *pR, *pP, x;
+	long			*pL, *pR, *pP, x;
 	CLFlt			*nSitesOfPat; 
 	TreeNode		*p;
 	ModelInfo		*m;
@@ -10684,7 +10684,7 @@
 {
 	
 	int				c, i, n, division;
-	safeLong			*pL, *pR, *pP, *pA, x;
+	long			*pL, *pR, *pP, *pA, x;
 	CLFlt			*nSitesOfPat;
 	MrBFlt			length;
 	TreeNode		*p;
@@ -10759,7 +10759,7 @@
 {
 	
 	int				c, i, n, division;
-	safeLong			*pD, *pP, *pA, x;
+	long			*pD, *pP, *pA, x;
 	TreeNode		*p;
 	ModelInfo		*m;
 
@@ -10994,7 +10994,7 @@
 
 
 
-int GetRandomEmbeddedSubtree (Tree *t, int nTerminals, safeLong *seed, int *nEmbeddedTrees)
+int GetRandomEmbeddedSubtree (Tree *t, int nTerminals, long *seed, int *nEmbeddedTrees)
 
 {
 	
@@ -11142,7 +11142,7 @@
 {
 
 	int				i, j, c, d;
-	safeLong			*cl, *clL, *clR, *clA, *clU, *clM, x, y, z;
+	long			*cl, *clL, *clR, *clA, *clU, *clM, x, y, z;
 	CLFlt			temp1, temp2=0.0;
 	CLFlt			*nSitesOfPat;
 	TreeNode		*p, *q;
@@ -11506,7 +11506,7 @@
 
 	int				i, j, k, n, c, d, s, chain, nObs, chosen, oneMatSize, nNodes,
 					nScalerNodes, numReps;
-	safeLong			*charBits;
+	long			*charBits;
 	ModelInfo		*m;
 	ModelParams		*mp;
 	CLFlt			*clPtr;
@@ -12232,7 +12232,7 @@
 {
 
 	int			c, d, i, s, invCondLikeSize, isConstant;
-	safeLong	*charBits;
+	long int	*charBits;
 	MrBFlt		*cI;
 	ModelInfo	*m;
 	ModelParams	*mp;
@@ -12384,7 +12384,7 @@
 {
 
 	int				i, j, k, d, chain, nIntNodes, nNodes, nParsSets;
-	safeLong			*ptr;
+	long			*ptr;
 	ModelInfo		*m;
 
 	/* Calculate number of nodes and number of internal nodes for rooted tree (worst case) */
@@ -12417,9 +12417,9 @@
 		MrBayesPrint ("%s   Space for parsimony state sets not free in InitParsSets\n", spacer);
 		return ERROR;
 		}
-	parsSets = (safeLong *) calloc (numLocalChains * nIntNodes * nParsSets * 2, sizeof(safeLong));
-	parsPtrSpace = (safeLong **) SafeMalloc (numLocalChains * nNodes * sizeof(safeLong *));
-	parsPtr = (safeLong ***) SafeMalloc (numLocalChains * sizeof(safeLong **));
+	parsSets = (long *) calloc (numLocalChains * nIntNodes * nParsSets * 2, sizeof(long));
+	parsPtrSpace = (long **) SafeMalloc (numLocalChains * nNodes * sizeof(long *));
+	parsPtr = (long ***) SafeMalloc (numLocalChains * sizeof(long **));
 	parsNodeLengthSpace = (CLFlt *) calloc (numLocalChains * parsNodeLenRowSize * 2, sizeof (CLFlt));
 	parsNodeLen = (CLFlt **) SafeMalloc (numLocalChains * sizeof(CLFlt *));
 	if (!parsSets || !parsPtrSpace || !parsPtr || !parsNodeLengthSpace || !parsNodeLen)
@@ -12520,7 +12520,7 @@
 {
 
 	int				c, i, j, d, chain, nIntNodes, nNodes;
-	safeLong			*ptr, x;
+	long			*ptr, x;
 	ModelInfo		*m;
 
 	/* Calculate number of nodes and number of internal nodes for rooted tree (worst case) */
@@ -12537,10 +12537,10 @@
 		MrBayesPrint ("%s   Space for SPR parsimony state sets not free in InitSprParsSets\n", spacer);
 		return ERROR;
 		}
-	sprParsMatrix = (safeLong *) calloc (sprParsMatrixRowSize * numLocalTaxa, sizeof(safeLong));
-	sprParsSets = (safeLong *) calloc (numLocalChains * nNodes * sprParsMatrixRowSize * 3, sizeof(safeLong));
-	sprParsPtrSpace = (safeLong **) SafeMalloc (numLocalChains * nNodes * sizeof(safeLong *));
-	sprParsPtr = (safeLong ***) SafeMalloc (numLocalChains * sizeof(safeLong **));
+	sprParsMatrix = (long *) calloc (sprParsMatrixRowSize * numLocalTaxa, sizeof(long));
+	sprParsSets = (long *) calloc (numLocalChains * nNodes * sprParsMatrixRowSize * 3, sizeof(long));
+	sprParsPtrSpace = (long **) SafeMalloc (numLocalChains * nNodes * sizeof(long *));
+	sprParsPtr = (long ***) SafeMalloc (numLocalChains * sizeof(long **));
 	if (!sprParsMatrix || !sprParsSets || !sprParsPtrSpace || !sprParsPtr)
 		{
 		if (sprParsMatrix)
@@ -12653,7 +12653,7 @@
 
 	int			c, d, i, j, k, s, maxRates, numReps, oneMatSize,
 				corrModel[MAX_NUM_DIVS];
-	safeLong	*charBits;
+	long int	*charBits;
 	CLFlt		*cL;
 	ModelInfo	*m;
 	ModelParams *mp=NULL;
@@ -12970,11 +12970,11 @@
 
 
 
-int IsBitSet (int i, safeLong *bits)
+int IsBitSet (int i, long *bits)
 
 {
 
-	safeLong		x;
+	long		x;
 
 	bits += i / nBitsInALong;
 
@@ -13341,9 +13341,9 @@
 
 
 /* LastBlock: Return file position of last block in file */
-safeLong LastBlock (FILE *fp, char *lineBuf, int longestLine)
+long LastBlock (FILE *fp, char *lineBuf, int longestLine)
 {
-	safeLong	lastBlock;
+	long	lastBlock;
 	char	*word;
 	
 	lastBlock = 0L;
@@ -14085,7 +14085,7 @@
 {
 	
 	int				c, i, nStates;
-	safeLong			done, *pL, *pR, *pP, *pA, *oldpP, x;
+	long			done, *pL, *pR, *pP, *pA, *oldpP, x;
 	CLFlt			nParsChars, treeLength;
 	CLFlt			length, *nSitesOfPat, *newNodeLength, oldNodeLength;
 	Tree			*t;
@@ -14266,7 +14266,7 @@
 {
 	
 	int				c, i, *nStates;
-	safeLong			*pL, *pR, *pP, *pA, *oldpP, x;
+	long			*pL, *pR, *pP, *pA, *oldpP, x;
 	CLFlt			*treeLength;
 	CLFlt			*nSitesOfPat;
 	Tree			*t;
@@ -15095,7 +15095,7 @@
 
 
 
-int Move_Aamodel (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_Aamodel (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -15212,7 +15212,7 @@
 
 
 
-int Move_Adgamma (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_Adgamma (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -15280,7 +15280,7 @@
 
 
 
-int Move_Beta (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_Beta (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -15411,7 +15411,7 @@
 |	   TODO: Smart update of tiprobs, rnd insert both ends of
 |		the moved branch on attachment branch
 ----------------------------------------------------------------*/
-int Move_BiasedSpr (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_BiasedSpr (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -16013,7 +16013,7 @@
 
 
 
-int Move_BrLen (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_BrLen (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -16095,7 +16095,7 @@
 
 
 
-int Move_TreeHeight (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_TreeHeight (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -16294,7 +16294,7 @@
 
 
 
-int Move_Extinction (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_Extinction (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -16389,7 +16389,7 @@
 
 
 
-int Move_Extinction_M (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_Extinction_M (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -16484,7 +16484,7 @@
 
 
 
-int Move_ExtSPR1 (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_ExtSPR1 (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -17020,7 +17020,7 @@
 
 
 
-int Move_ExtSPR2 (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_ExtSPR2 (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -17562,7 +17562,7 @@
 
 
 
-int Move_ExtSPRClock (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_ExtSPRClock (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -17927,7 +17927,7 @@
 
 
 
-int Move_ExtSS (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_ExtSS (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -18471,7 +18471,7 @@
 
 
 
-int Move_ExtTBR (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_ExtTBR (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -18934,7 +18934,7 @@
 
 
 
-int Move_ExtTBR1 (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_ExtTBR1 (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -19456,7 +19456,7 @@
 
 
 
-int Move_ExtTBR2 (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_ExtTBR2 (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -20032,7 +20032,7 @@
 
 
 
-int Move_ExtTBR3 (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_ExtTBR3 (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -20648,7 +20648,7 @@
 
 
 
-int Move_ExtTBR4 (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_ExtTBR4 (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -21171,7 +21171,7 @@
 
 
 
-int Move_GammaShape_M (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_GammaShape_M (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -21261,7 +21261,7 @@
 
 
 
-int Move_Growth (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_Growth (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -21382,7 +21382,7 @@
 |		   the boundary conditions into account
 |
 ----------------------------------------------------------------*/
-int Move_Local (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_Local (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 	
@@ -21699,7 +21699,7 @@
 |           does not change tree height.
 |
 ----------------------------------------------------------------*/
-int Move_LocalClock (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_LocalClock (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 	
@@ -22186,7 +22186,7 @@
 
 
 /* change topology using NNI */
-int Move_NNI (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_NNI (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -22259,7 +22259,7 @@
 
 
 /* change topology with unlinked brlens using NNI */
-int Move_NNI_Hetero (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_NNI_Hetero (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -22465,7 +22465,7 @@
 |
 -------------------------------------------------------------------------------------*/
 
-int Move_NodeSlider (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_NodeSlider (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 	MrBFlt		tuning, maxV, minV, oldM, newM, brlensPrExp=0.0, newMin, newMax, oldMin, oldMax;
@@ -22558,7 +22558,7 @@
 |
 -------------------------------------------------------------------------------------*/
 
-int Move_NodeSliderClock (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_NodeSliderClock (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 	MrBFlt			window, minV, minDepth, maxDepth, oldDepth, newDepth, oldLnPrior, newLnPrior, theta=0.0, growth=0.0, sR=0.0, eR=0.0, sF=0.0;
@@ -22772,7 +22772,7 @@
 |      Note that this is appropriate when omegavar=equal
 |
 ----------------------------------------------------------------*/
-int Move_Omega (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_Omega (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -22854,7 +22854,7 @@
 |      omegavar=equal
 |
 ----------------------------------------------------------------*/
-int Move_Omega_M (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_Omega_M (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -22937,7 +22937,7 @@
 |      appropriate whenomegavar=M10
 |
 ----------------------------------------------------------------*/
-int Move_OmegaBeta_M (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_OmegaBeta_M (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -23025,7 +23025,7 @@
 |      appropriate whenomegavar=M10
 |
 ----------------------------------------------------------------*/
-int Move_OmegaGamma_M (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_OmegaGamma_M (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -23120,7 +23120,7 @@
 
 
 #undef	DO_DIR_CAT_PROP
-int Move_OmegaCat (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_OmegaCat (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -23288,7 +23288,7 @@
 |      for neutral sites
 |
 ----------------------------------------------------------------*/
-int Move_OmegaNeu (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_OmegaNeu (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -23371,7 +23371,7 @@
 |      for positively selected sites
 |
 ----------------------------------------------------------------*/
-int Move_OmegaPos (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_OmegaPos (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -23477,7 +23477,7 @@
 |      for purifying selection sites
 |
 ----------------------------------------------------------------*/
-int Move_OmegaPur (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_OmegaPur (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -23569,7 +23569,7 @@
 |      Programmed by FR 2004-10-23--
 |
 ----------------------------------------------------------------*/
-int Move_ParsEraser1 (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_ParsEraser1 (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -23854,7 +23854,7 @@
 
 
 
-int Move_Pinvar (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_Pinvar (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -23918,7 +23918,7 @@
 
 
 
-int Move_RanSPR1 (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_RanSPR1 (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -24486,7 +24486,7 @@
 
 
 
-int Move_RanSPR2 (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_RanSPR2 (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -25066,7 +25066,7 @@
 
 
 
-int Move_RanSPR3 (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_RanSPR3 (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -25714,7 +25714,7 @@
 
 
 
-int Move_RanSPR4 (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_RanSPR4 (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -26416,7 +26416,7 @@
 |      proposal.
 |
 ----------------------------------------------------------------*/
-int Move_RateMult_Dir (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_RateMult_Dir (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -26531,7 +26531,7 @@
 |      mechanism.
 |
 ----------------------------------------------------------------*/
-int Move_Revmat_Dir (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_Revmat_Dir (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -26632,7 +26632,7 @@
 
 
 
-int Move_Speciation (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_Speciation (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -26726,7 +26726,7 @@
 
 
 
-int Move_Speciation_M (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_Speciation_M (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -26829,7 +26829,7 @@
 |      Programmed by JH 2002-11-18
 |
 ----------------------------------------------------------------*/
-int Move_SPRClock (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_SPRClock (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -27474,7 +27474,7 @@
 
 
 
-int Move_Statefreqs (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_Statefreqs (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -27560,7 +27560,7 @@
 
 
 
-int Move_StatefreqsSymDirMultistate (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_StatefreqsSymDirMultistate (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -27653,7 +27653,7 @@
 
 
 
-int Move_SwitchRate (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_SwitchRate (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -27742,7 +27742,7 @@
 
 
 
-int Move_SwitchRate_M (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_SwitchRate_M (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -27831,7 +27831,7 @@
 
 
 
-int Move_Theta (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_Theta (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -27917,7 +27917,7 @@
 
 
 
-int Move_Tratio_Dir (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_Tratio_Dir (Param *param, int chain, long int *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -28017,7 +28017,7 @@
 |      Programmed by JH 2003-08-13
 |
 ----------------------------------------------------------------*/
-int Move_UnrootedSlider (Param *param, int chain, safeLong *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
+int Move_UnrootedSlider (Param *param, int chain, long *seed, MrBFlt *lnPriorRatio, MrBFlt *lnProposalRatio, MrBFlt *mvp)
 
 {
 
@@ -28979,7 +28979,7 @@
 
 
 
-int PickProposal (safeLong *seed)
+int PickProposal (long int *seed)
 
 {
 	
@@ -30162,7 +30162,7 @@
 {
 
 	int				i, j=0, k, c, d, printWidth, nextColumn, nChars, inputChar;
-	safeLong			x, y;
+	long			x, y;
 	char			ch, tempName[200];
 	ModelInfo		*m;
 	ModelParams		*mp;
@@ -32379,7 +32379,7 @@
 |		RandResolve: Randomly resolve a polytomous tree
 |
 ---------------------------------------------------------------------*/
-int RandResolve (Tree *destination, PolyTree *t, safeLong *seed)
+int RandResolve (Tree *destination, PolyTree *t, long *seed)
 
 {
 
@@ -32646,7 +32646,7 @@
 
 
 /* RemovePartition: Remove a partition from the tree keeping track of partition frequencies */
-int RemovePartition (PFNODE *r, safeLong *p, int runId)
+int RemovePartition (PFNODE *r, long *p, int runId)
 {
 	int		i, comp;
 	
@@ -32728,7 +32728,7 @@
 int RemoveTreeSamples (int from, int to)
 {
 	int		i, j, k, longestLine;
-	safeLong	lastBlock;
+	long	lastBlock;
 	char	*word, *s, *lineBuf=0;
 	FILE	*fp;
 	Tree	*t;
@@ -33079,7 +33079,7 @@
 
 
 
-int RunChain (safeLong *seed)
+int RunChain (long int *seed)
 
 {
 	
@@ -35289,10 +35289,10 @@
 
 
 
-void SetBit (int i, safeLong *bits)
+void SetBit (int i, long int *bits)
 
 {
-	safeLong		x;
+	long		x;
 
 	bits += i / nBitsInALong;
 
@@ -39329,13 +39329,13 @@
 		MrBayesPrint ("%s   ERROR: pfcounters not free in SetUpPartitionCounters\n", spacer);
 		return ERROR;
 		}
-	partition = (safeLong **) calloc (2*numLocalTaxa, sizeof (safeLong *));
+	partition = (long **) calloc (2*numLocalTaxa, sizeof (long *));
 	if (partition == NULL)
 		{
 		MrBayesPrint ("%s   Failed to allocate partition in SetUpPartitionCounters\n", spacer);
 		return ERROR;
 		}
-	partition[0] = (safeLong *) calloc (2*numLocalTaxa * nLongsNeeded, sizeof(safeLong));
+	partition[0] = (long *) calloc (2*numLocalTaxa * nLongsNeeded, sizeof(long));
 	if (partition[0] == NULL)
 		{
 		free (partition);
@@ -39381,7 +39381,7 @@
 {
 
 	int			i, j, k, n, c, d, x=0, nReps;
-	safeLong	*p;
+	long int	*p;
 	ModelInfo	*m;
 	ModelParams *mp;
 
@@ -39859,7 +39859,7 @@
 	if (temp == NULL)
 		return NULL;
 
-	temp->partition = (safeLong *) calloc (nLongsNeeded, sizeof (safeLong));
+	temp->partition = (long *) calloc (nLongsNeeded, sizeof (long));
 	if (temp->partition == NULL)
 		{
 		free (temp);
diff -ur mrbayes-3.1.2.new/mcmc.h mrbayes-3.1.2/mcmc.h
--- mrbayes-3.1.2.new/mcmc.h	2006-08-08 16:01:53.000000000 +0200
+++ mrbayes-3.1.2/mcmc.h	2005-12-22 22:34:40.000000000 +0100
@@ -10,5 +10,5 @@
 int	  MoveCalculationRoot (Tree *t, int outgroup);
 FILE *OpenNewMBPrintFile (char *fileName);
 int	  RootTree (Tree *t);
-void  SetBit (int i, safeLong *bits);
+void  SetBit (int i, long *bits);
 void  SetUpMoveTypes (void);
diff -ur mrbayes-3.1.2.new/sumt.c mrbayes-3.1.2/sumt.c
--- mrbayes-3.1.2.new/sumt.c	2006-08-08 16:01:53.000000000 +0200
+++ mrbayes-3.1.2/sumt.c	2005-12-23 17:26:29.000000000 +0100
@@ -51,7 +51,7 @@
 	struct stnode	*left, *right, *anc;
 	int				memoryIndex, index, upDateCl, upDateTi, marked, x, y,
 					scalerNode, taxonName;
-	safeLong			scalersSet, clSpace, tiSpace;
+	long			scalersSet, clSpace, tiSpace;
 	char			label[100];
 	MrBFlt			length;
 	}
@@ -66,8 +66,8 @@
 /* local prototypes */
 int      AddTreeToList (int whichList);
 int      AllocBits (int n);
-void     AssignIntPart (safeLong *lft, safeLong *rht, safeLong *p);
-void     AssignTipPart (int n, safeLong *p);
+void     AssignIntPart (long *lft, long *rht, long *p);
+void     AssignTipPart (int n, long *p);
 int		 BrlensVals (int treeNo, char *s, int longestLineLength, int lastTreeBlockBegin, int lastTreeBlockEnd);
 void     CalculateTreeToTreeDistance (int *lst[2], MrBFlt *lngs[2], int nnds, int hasBrlens, MrBFlt *d1, MrBFlt *d2, MrBFlt *d3);
 int      CheckSumtSpecies (void);
@@ -76,7 +76,7 @@
 int      FindParts (void);
 int      FindTree (void);
 void     FinishSumtTree (SumtNode *p, int *i, int isThisTreeRooted);
-int      FirstTaxonInPartition (safeLong *partition, int length);
+int      FirstTaxonInPartition (long *partition, int length);
 int      FreeBits (void);
 void     GetConDownPass (PolyNode **downPass, PolyNode *p, int *i);
 int      GetPartitions (void);
@@ -85,20 +85,20 @@
 int		 OpenBrlensFile (int treeNo);
 int      OpenComptFiles (void);
 int      OpenSumtFiles (int treeNo);
-int      PartFinder (safeLong *p, MrBFlt bl, int *partID);
+int      PartFinder (long *p, MrBFlt bl, int *partID);
 int		 PrintBrlensToFile (void);
-void     PrintParts (FILE *fp, safeLong *p, int nTaxaToShow);
+void     PrintParts (FILE *fp, long *p, int nTaxaToShow);
 int      PruneSumt (void);
 int      RealloateBits (void);
 int      RealloateFullCompTrees (int whichList);
 int      RealloateFullTrees (void);
 int      ReorderParts (void);
 int      RootSumtTree (SumtNode *p, int n, int out);
-void     ShowBits (safeLong *p, int nBitsToShow);
+void     ShowBits (long *p, int nBitsToShow);
 void	 ShowConNodes (int nNodes, PolyNode *root);
 int		 ShowConTree (FILE *fp, int nNodes, PolyNode *root, int screenWidth, int showSupport);
 int		 ShowConPhylogram (FILE *fp, int nNodes, PolyNode *root, int screenWidth);
-void     ShowParts (safeLong *p, int nTaxaToShow);
+void     ShowParts (long *p, int nTaxaToShow);
 void     ShowSumtNodes (SumtNode *p, int indent, int isThisTreeRooted);
 void     SortIndParts (int *item, MrBFlt *assoc, int count, int descendingOrder);
 void     SortIndParts2 (int *item, MrBFlt *assoc, int left, int right, int descendingOrder);
@@ -122,7 +122,7 @@
 			*prunedTaxa, *absentTaxa, *firstPrunedTaxa, *firstAbsentTaxa, comparingFiles, fileNum, numCompTrees[2], numCompTreesSampled[2],
 			numFullCompTreesFound[2], numFullCompTreesAllocated[2], *fullCompTreePartIds1, *fullCompTreePartIds2,
 			numBrlens, printingBrlens, runIndex;
-safeLong	*treeBits, *treePartsFound, *taxonMask;
+long int	*treeBits, *treePartsFound, *taxonMask;
 MrBFlt		*aBrlens, *sBrlens, *treePartLengths, *fullCompTreePartLengths1, *fullCompTreePartLengths2,
 			*brlens, *aWithinBrlens, *sWithinBrlens, *sumB, *sumsqB;
 SumtNode	*pSumtPtr, *qSumtPtr, *sumtRoot, *sumtNodes;
@@ -185,11 +185,11 @@
 {
 
 	int					i, j, offSet;
-	safeLong				x, y;
+	long				x, y;
 	
 	/* decide how many unsigned ints are going to be needed to
 	   represent a taxon number */
-	taxonLongsNeeded = (n / (sizeof(safeLong)*8)) + 1;
+	taxonLongsNeeded = (n / (sizeof(long int)*8)) + 1;
 	
 	/* how many partitions have been allocated */
 	numPartsAllocated = MAX_PARTITIONS;
@@ -208,11 +208,11 @@
 	treeBits = NULL;
 	treePartNums = NULL;
 	treePartLengths = NULL;
-	treeBits = (safeLong *)SafeMalloc((size_t) (2 * n * taxonLongsNeeded * sizeof(safeLong)));
+	treeBits = (long *)SafeMalloc((size_t) (2 * n * taxonLongsNeeded * sizeof(long)));
 	treePartNums = (int *)SafeMalloc((size_t) (2 * n * sizeof(int)));
 	if (!treeBits || !treePartNums)
 		{
-		MrBayesPrint ("%s   Problem allocating treeBits (%d)\n", spacer, 2 * n * taxonLongsNeeded * sizeof(safeLong));
+		MrBayesPrint ("%s   Problem allocating treeBits (%d)\n", spacer, 2 * n * taxonLongsNeeded * sizeof(long));
 		goto errorExit;
 		}
 	treePartLengths = (MrBFlt *)SafeMalloc((size_t) (2 * n * sizeof(MrBFlt)));
@@ -249,10 +249,10 @@
 		goto errorExit;
 		}
 	treePartsFound = NULL;
-	treePartsFound = (safeLong *)SafeMalloc((size_t) (taxonLongsNeeded * MAX_PARTITIONS * sizeof(safeLong)));
+	treePartsFound = (long *)SafeMalloc((size_t) (taxonLongsNeeded * MAX_PARTITIONS * sizeof(long)));
 	if (!treePartsFound)
 		{
-		MrBayesPrint ("%s   Problem allocating treePartsFound (%d)\n", spacer, taxonLongsNeeded * MAX_PARTITIONS * sizeof(safeLong));
+		MrBayesPrint ("%s   Problem allocating treePartsFound (%d)\n", spacer, taxonLongsNeeded * MAX_PARTITIONS * sizeof(long));
 		goto errorExit;
 		}
 	memAllocs[ALLOC_TREEPARTS] = YES;
@@ -457,10 +457,10 @@
 		goto errorExit;
 		}
 	taxonMask = NULL;
-	taxonMask = (safeLong *)SafeMalloc((size_t) (taxonLongsNeeded * sizeof(safeLong)));
+	taxonMask = (long *)SafeMalloc((size_t) (taxonLongsNeeded * sizeof(long)));
 	if (!taxonMask)
 		{
-		MrBayesPrint ("%s   Problem allocating taxonMask (%d)\n", spacer, taxonLongsNeeded * sizeof(safeLong));
+		MrBayesPrint ("%s   Problem allocating taxonMask (%d)\n", spacer, taxonLongsNeeded * sizeof(long));
 		goto errorExit;
 		}
 	memAllocs[ALLOC_TAXONMASK] = YES;
@@ -478,7 +478,7 @@
 	prunedTaxa = (int *)SafeMalloc((size_t) (i * sizeof(int)));
 	if (!prunedTaxa)
 		{
-		MrBayesPrint ("%s   Problem allocating prunedTaxa (%d)\n", spacer, i * sizeof(safeLong));
+		MrBayesPrint ("%s   Problem allocating prunedTaxa (%d)\n", spacer, i * sizeof(long));
 		goto errorExit;
 		}
 	absentTaxa = prunedTaxa + numTaxa;
@@ -579,11 +579,11 @@
 
 
 
-void AssignTipPart (int n, safeLong *p)
+void AssignTipPart (int n, long *p)
 
 {
 
-	safeLong		x;
+	long		x;
 
 	p += n / nBitsInALong;
 	x = 1 << (n % nBitsInALong);
@@ -595,7 +595,7 @@
 
 
 
-void AssignIntPart (safeLong *lft, safeLong *rht, safeLong *p)
+void AssignIntPart (long *lft, long *rht, long *p)
 
 {
 
@@ -992,7 +992,7 @@
 {
 
 	int			i, j, targetNode, nBits, nextConNode, isCompat, localOutgroupNum, numTerminalsEncountered;
-	safeLong		x, *mask = NULL, *partition = NULL, *ingroupPartition = NULL, *outgroupPartition = NULL;
+	long		x, *mask = NULL, *partition = NULL, *ingroupPartition = NULL, *outgroupPartition = NULL;
 	MrBFlt		freq;
 	char		tempName[100];
 	PolyNode	*cp, *q, *r, *ql, *rl, *pl, **downPass = NULL;
@@ -1054,7 +1054,7 @@
 		MrBayesPrint ("%s   outgroupPartition is already allocated\n", spacer);
 		goto errorExit;
 		}
-	outgroupPartition = (safeLong *) calloc (3 * taxonLongsNeeded, sizeof(safeLong));
+	outgroupPartition = (long *) calloc (3 * taxonLongsNeeded, sizeof(long));
 	if (!outgroupPartition)
 		{
 		MrBayesPrint ("%s   Could not allocate outgroupPartition\n", spacer);
@@ -1687,8 +1687,8 @@
 				longestLineLength1, longestLineLength2, xaxis, yaxis, starHolder[80], *treePartList[2], minNumTrees,
 				screenWidth, screenHeigth, numY[60], nSamples, nCompPartitions, numIncludedTaxa1, numIncludedTaxa2,
 				oldSumtBrlensDef, brlensDef;
-	safeLong	temporarySeed, len;
-	safeLong		*x;
+	long int	temporarySeed, len;
+	long		*x;
 	MrBFlt		xProb, yProb, xInc, yInc, xUpper, xLower, yUpper, yLower, *treeLengthList[2], *dT1=NULL, *dT2=NULL, *dT3=NULL, d1, d2, d3, 
 				meanY[60], xVal, yVal, minX, minY, maxX, maxY, sums[3];
 	char		*s=NULL, tempStr[100], tempName[100], prCh;
@@ -2725,7 +2725,7 @@
 
 	/* calculate average tree-to-tree distances */
 	curTime = time(NULL);
-	temporarySeed  = (safeLong)curTime;
+	temporarySeed  = (long int)curTime;
 	if (temporarySeed < 0)
 		temporarySeed = -temporarySeed;
 	sums[0] = sums[1] = sums[2] = 0.0;
@@ -2937,7 +2937,7 @@
 				maxWidthNumberPartitions, tableWidth, unreliable, oneUnreliable, firstSumtBrlensDef=0,
 				numTotalTreesSampled;
 	MrBFlt		var=0.0, f, var_s, sum_s, stddev_s=0.0, sumsq_s, varB, varW=0.0, sqrt_R=0.0;
-	safeLong		*x;
+	long		*x;
 	char		*s=NULL, tempName[100], tempStr[100], fileName[100];
 	FILE		*fp;
 	
@@ -5187,14 +5187,14 @@
 
 
 
-int FirstTaxonInPartition (safeLong *partition, int length)
+int FirstTaxonInPartition (long *partition, int length)
 
 {
 
 	int				i, j, nBits, taxon;
-	safeLong			x;
+	long			x;
 
-	nBits = sizeof(safeLong) * 8;
+	nBits = sizeof(long) * 8;
 
 	for (i=taxon=0; i<length; i++)
 		{
@@ -5217,7 +5217,7 @@
 
 
 
-void FlipBits (safeLong *partition, int length, safeLong *mask)
+void FlipBits (long int *partition, int length, long *mask)
 
 {
 
@@ -5623,7 +5623,7 @@
 
 
 
-int IsPartCompatible (safeLong *smaller, safeLong *larger, int length)
+int IsPartCompatible (long *smaller, long *larger, int length)
 
 {
 
@@ -5650,7 +5650,7 @@
 
 
 
-int IsPartNested (safeLong *smaller, safeLong *larger, int length)
+int IsPartNested (long *smaller, long *larger, int length)
 
 {
 
@@ -5824,12 +5824,12 @@
 
 
 
-int PartFinder (safeLong *p, MrBFlt bl, int *partID)
+int PartFinder (long *p, MrBFlt bl, int *partID)
 
 {
 			
 	int			i, n, foundPart, nDiff, whichPart;
-	safeLong		*x;
+	long		*x;
 	MrBFlt		f;
 	
 	if (printingBrlens == YES)
@@ -5992,12 +5992,12 @@
 
 
 
-void PrintParts (FILE *fp, safeLong *p, int nTaxaToShow)
+void PrintParts (FILE *fp, long *p, int nTaxaToShow)
 
 {
 
 	int			i, flipBits;
-	safeLong		x, y;
+	long		x, y;
 	
 	flipBits = NO;
 	if (isSumtTreeRooted == NO)
@@ -6161,10 +6161,10 @@
 	
 	if (memAllocs[ALLOC_TREEPARTS] == NO)
 		goto errorExit;
-	treePartsFound = (safeLong *)realloc(treePartsFound, (size_t) (taxonLongsNeeded * numPartsAllocated * sizeof(safeLong)));
+	treePartsFound = (long *)realloc(treePartsFound, (size_t) (taxonLongsNeeded * numPartsAllocated * sizeof(long)));
 	if (!treePartsFound)
 		{
-		MrBayesPrint ("%s   Problem reallocating treePartsFound (%d)\n", spacer, taxonLongsNeeded * numPartsAllocated * sizeof(safeLong));
+		MrBayesPrint ("%s   Problem reallocating treePartsFound (%d)\n", spacer, taxonLongsNeeded * numPartsAllocated * sizeof(long));
 		goto errorExit;
 		}
 		
@@ -6371,9 +6371,9 @@
 {
 
 	int			n, i, j;
-	safeLong		*x, y, z, *newBits;
+	long		*x, y, z, *newBits;
 
-	newBits = (safeLong *)SafeMalloc((size_t) (taxonLongsNeeded * sizeof(safeLong)));
+	newBits = (long *)SafeMalloc((size_t) (taxonLongsNeeded * sizeof(long)));
 	if (!newBits)
 		{
 		MrBayesPrint ("%s   Could not allocate newBits\n", spacer);
@@ -6696,12 +6696,12 @@
 
 
 
-void ShowBits (safeLong *p, int nBitsToShow)
+void ShowBits (long *p, int nBitsToShow)
 
 {
 
 	int			i;
-	safeLong		x, y;
+	long		x, y;
 	
 	for (i=0; i<nBitsToShow; i++)
 		{
@@ -7199,12 +7199,12 @@
 
 
 
-void ShowParts (safeLong *p, int nTaxaToShow)
+void ShowParts (long *p, int nTaxaToShow)
 
 {
 
 	int			i, flipBits;
-	safeLong		x, y;
+	long		x, y;
 	
 	flipBits = NO;
 	if (isSumtTreeRooted == NO)
@@ -7521,7 +7521,7 @@
 
 	register int	i, j, k;
 	int				yI;
-	safeLong			yL;
+	long			yL;
 	MrBFlt			x, y;
 
 	i = left;
@@ -7635,7 +7635,7 @@
 	int			i, j, n, num, targetNode, nBits, nextConNode, isCompat, 
 				localOutgroupNum, origPartNum, reorderedPartNum, *tempTreeNum=NULL, *tempNumOfTree=NULL,
 				nInSets[5];
-	safeLong		x, *mask, *partition, *ingroupPartition, *outgroupPartition=NULL;
+	long		x, *mask, *partition, *ingroupPartition, *outgroupPartition=NULL;
 	MrBFlt		treeProb, cumTreeProb;
 	char		tempName[100];
 	PolyNode	*cp, *q, *r, *ql, *pl;
@@ -7724,7 +7724,7 @@
 		MrBayesPrint ("%s   outgroupPartition is already allocated\n", spacer);
 		goto errorExit;
 		}
-	outgroupPartition = (safeLong *) calloc (3 * taxonLongsNeeded, sizeof(safeLong));
+	outgroupPartition = (long *) calloc (3 * taxonLongsNeeded, sizeof(long));
 	if (!outgroupPartition)
 		{
 		MrBayesPrint ("%s   Could not allocate outgroupPartition\n", spacer);
diff -ur mrbayes-3.1.2.new/sumt.h mrbayes-3.1.2/sumt.h
--- mrbayes-3.1.2.new/sumt.h	2006-08-08 16:04:03.000000000 +0200
+++ mrbayes-3.1.2/sumt.h	2005-09-08 19:27:42.000000000 +0200
@@ -6,8 +6,8 @@
 int      DoTranslateParm (char *parmName, char *tkn);
 int      DoTree (void);
 int      DoTreeParm (char *parmName, char *tkn);
-void     FlipBits (safeLong *partition, int length, safeLong *mask);
-int      IsPartCompatible (safeLong *smaller, safeLong *larger, int length);
-int      IsPartNested (safeLong *smaller, safeLong *larger, int length);
+void     FlipBits (long int *partition, int length, long int *mask);
+int      IsPartCompatible (long int *smaller, long int *larger, int length);
+int      IsPartNested (long int *smaller, long int *larger, int length);
 void     SortInts (int *item, int *assoc, int count, int descendingOrder);
 void     SortInts2 (int *item, int *assoc, int left, int right, int descendingOrder);

 	  	 
